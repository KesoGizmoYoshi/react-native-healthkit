{"version":3,"names":["useHealthkitAuthorization","useIsHealthDataAvailable","useMostRecentCategorySample","useMostRecentQuantitySample","useMostRecentWorkout","useSubscribeToChanges","Native","deleteQuantitySample","deleteSamples","getDateOfBirth","getMostRecentCategorySample","getMostRecentQuantitySample","getMostRecentWorkout","getPreferredUnit","getPreferredUnits","getRequestStatusForAuthorization","queryCategorySamples","queryCategorySamplesWithAnchor","queryCorrelationSamples","queryHeartbeatSeriesSamples","queryHeartbeatSeriesSamplesWithAnchor","queryQuantitySamples","queryQuantitySamplesWithAnchor","querySources","queryStatisticsForQuantity","queryWorkouts","requestAuthorization","saveCategorySample","saveCorrelationSample","saveQuantitySample","saveWorkoutSample","subscribeToChanges","Healthkit","authorizationStatusFor","bind","isHealthDataAvailable","canAccessProtectedData","disableAllBackgroundDelivery","disableBackgroundDelivery","enableBackgroundDelivery","getBiologicalSex","getFitzpatrickSkinType","getWheelchairUse","getBloodType","getWorkoutRoutes"],"sources":["index.ios.tsx"],"sourcesContent":["import useHealthkitAuthorization from './hooks/useHealthkitAuthorization'\nimport useIsHealthDataAvailable from './hooks/useIsHealthDataAvailable'\nimport useMostRecentCategorySample from './hooks/useMostRecentCategorySample'\nimport useMostRecentQuantitySample from './hooks/useMostRecentQuantitySample'\nimport useMostRecentWorkout from './hooks/useMostRecentWorkout'\nimport useSubscribeToChanges from './hooks/useSubscribeToChanges'\nimport Native from './native-types'\nimport deleteQuantitySample from './utils/deleteQuantitySample'\nimport deleteSamples from './utils/deleteSamples'\nimport getDateOfBirth from './utils/getDateOfBirth'\nimport getMostRecentCategorySample from './utils/getMostRecentCategorySample'\nimport getMostRecentQuantitySample from './utils/getMostRecentQuantitySample'\nimport getMostRecentWorkout from './utils/getMostRecentWorkout'\nimport getPreferredUnit from './utils/getPreferredUnit'\nimport getPreferredUnits from './utils/getPreferredUnits'\nimport getRequestStatusForAuthorization from './utils/getRequestStatusForAuthorization'\nimport queryCategorySamples from './utils/queryCategorySamples'\nimport queryCategorySamplesWithAnchor from './utils/queryCategorySamplesWithAnchor'\nimport queryCorrelationSamples from './utils/queryCorrelationSamples'\nimport queryHeartbeatSeriesSamples from './utils/queryHeartbeatSeriesSamples'\nimport queryHeartbeatSeriesSamplesWithAnchor from './utils/queryHeartbeatSeriesSamplesWithAnchor'\nimport queryQuantitySamples from './utils/queryQuantitySamples'\nimport queryQuantitySamplesWithAnchor from './utils/queryQuantitySamplesWithAnchor'\nimport querySources from './utils/querySources'\nimport queryStatisticsForQuantity from './utils/queryStatisticsForQuantity'\nimport queryWorkouts from './utils/queryWorkouts'\nimport requestAuthorization from './utils/requestAuthorization'\nimport saveCategorySample from './utils/saveCategorySample'\nimport saveCorrelationSample from './utils/saveCorrelationSample'\nimport saveQuantitySample from './utils/saveQuantitySample'\nimport saveWorkoutSample from './utils/saveWorkoutSample'\nimport subscribeToChanges from './utils/subscribeToChanges'\n\nconst Healthkit = {\n  authorizationStatusFor: Native.authorizationStatusFor.bind(Native),\n\n  isHealthDataAvailable: Native.isHealthDataAvailable.bind(Native),\n  canAccessProtectedData: Native.canAccessProtectedData.bind(Native),\n\n  disableAllBackgroundDelivery:\n    Native.disableAllBackgroundDelivery.bind(Native),\n  disableBackgroundDelivery: Native.disableBackgroundDelivery.bind(Native),\n  enableBackgroundDelivery: Native.enableBackgroundDelivery.bind(Native),\n\n  // simple convenience getters\n  getBiologicalSex: Native.getBiologicalSex.bind(Native),\n  getFitzpatrickSkinType: Native.getFitzpatrickSkinType.bind(Native),\n  getWheelchairUse: Native.getWheelchairUse.bind(Native),\n  getBloodType: Native.getBloodType.bind(Native),\n\n  getWorkoutRoutes: Native.getWorkoutRoutes.bind(Native),\n\n  getDateOfBirth,\n\n  getMostRecentQuantitySample,\n  getMostRecentCategorySample,\n  getMostRecentWorkout,\n\n  getPreferredUnit,\n  getPreferredUnits,\n  getRequestStatusForAuthorization,\n\n  // query methods\n  queryCategorySamples,\n  queryCategorySamplesWithAnchor,\n  queryCorrelationSamples,\n  queryHeartbeatSeriesSamples,\n  queryHeartbeatSeriesSamplesWithAnchor,\n  queryQuantitySamples,\n  queryQuantitySamplesWithAnchor,\n  queryStatisticsForQuantity,\n  queryWorkouts,\n  querySources,\n\n  requestAuthorization,\n\n  // delete methods\n  deleteQuantitySample,\n  deleteSamples,\n\n  // save methods\n  saveCategorySample,\n  saveCorrelationSample,\n  saveQuantitySample,\n  saveWorkoutSample,\n\n  // subscriptions\n  subscribeToChanges,\n\n  // hooks\n  useMostRecentCategorySample,\n\n  useMostRecentQuantitySample,\n  useMostRecentWorkout,\n\n  useSubscribeToChanges,\n\n  useIsHealthDataAvailable,\n  useHealthkitAuthorization,\n}\n\nexport * from './types'\n\nexport default Healthkit\n"],"mappings":"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"}